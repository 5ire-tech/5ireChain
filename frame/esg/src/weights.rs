
//! Autogenerated weights for `pallet_esg`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-05-16, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `ants-MBP-5`, CPU: `<UNKNOWN>`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/firechain-node
// benchmark
// pallet
// --chain=dev
// --pallet=pallet_esg
// --extrinsic
// *
// --steps=50
// --repeat=20
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output
// ./frame/esg/src/weights1.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for `pallet_esg`.
pub trait WeightInfo {
	fn register_an_oracle() -> Weight;
	fn deregister_an_oracle() -> Weight;
	fn upsert_esg_scores() -> Weight;
}
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: EsgScore SudoOraclesStore (r:1 w:1)
	// Storage: EsgScore NonSudoOraclesStore (r:1 w:0)
	fn register_an_oracle() -> Weight {
		// Minimum execution time: 28_000 nanoseconds.
		Weight::from_ref_time(28_000_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: EsgScore SudoOraclesStore (r:1 w:1)
	fn deregister_an_oracle() -> Weight {
		// Minimum execution time: 26_000 nanoseconds.
		Weight::from_ref_time(27_000_000)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: EsgScore SudoOraclesStore (r:1 w:0)
	// Storage: EsgScore ESGScoresMap (r:1000 w:1000)
	fn upsert_esg_scores() -> Weight {
		// Minimum execution time: 4_802_000 nanoseconds.
		Weight::from_ref_time(4_931_000_000)
			.saturating_add(T::DbWeight::get().reads(1001))
			.saturating_add(T::DbWeight::get().writes(1000))
	}
}

impl WeightInfo for () {
	// Storage: EsgScore SudoOraclesStore (r:1 w:1)
	// Storage: EsgScore NonSudoOraclesStore (r:1 w:0)
	fn register_an_oracle() -> Weight {
		// Minimum execution time: 28_000 nanoseconds.
		Weight::from_ref_time(28_000_000)
			.saturating_add(RocksDbWeight::get().reads(2))
			.saturating_add(RocksDbWeight::get().writes(1))
	}
	// Storage: EsgScore SudoOraclesStore (r:1 w:1)
	fn deregister_an_oracle() -> Weight {
		// Minimum execution time: 26_000 nanoseconds.
		Weight::from_ref_time(27_000_000)
			.saturating_add(RocksDbWeight::get().reads(1))
			.saturating_add(RocksDbWeight::get().writes(1))
	}
	// Storage: EsgScore SudoOraclesStore (r:1 w:0)
	// Storage: EsgScore ESGScoresMap (r:2 w:2)
	fn upsert_esg_scores() -> Weight {
		// Minimum execution time: 4_802_000 nanoseconds.
		Weight::from_ref_time(4_931_000_000)
			.saturating_add(RocksDbWeight::get().reads(1001))
			.saturating_add(RocksDbWeight::get().writes(1000))
	}
}