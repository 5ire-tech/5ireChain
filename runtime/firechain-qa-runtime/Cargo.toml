[package]
name = "firechain-qa-runtime"
version = "4.0.0-dev"
authors = ["5ire Team <admin@5ire.org>"]
description = "5ire chain node runtime"
edition = "2021"
build = "build.rs"
license = "Apache-2.0"
homepage = "https://www.5ire.org/"
repository = "https://github.com/5ire-tech/5ireChain/"
publish = false

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]

# third-party dependencies
codec = { package = "parity-scale-codec", version = "3.6.1", default-features = false, features = [
	"derive",
	"max-encoded-len",
] }
scale-info = { version = "2.5.0", default-features = false, features = [
	"derive",
] }
static_assertions = "1.1.0"
log = { version = "0.4.17", default-features = false }

primitive-types = { version = "0.12.0", default-features = false, features = [
	"codec",
	"scale-info",
	"num-traits",
] }
firechain-runtime-core-primitives = { path = "../core-primitives", default-features = false }
# primitives
sp-authority-discovery = { workspace = true }
sp-consensus-babe = { workspace = true }
sp-consensus-grandpa = { workspace = true }
sp-block-builder = { workspace = true }
sp-inherents = { workspace = true }
node-primitives = { workspace = true }
sp-offchain = { workspace = true }
sp-core = { workspace = true }
sp-std = { workspace = true }
sp-api = { workspace = true }
sp-runtime = { workspace = true }
sp-staking = { workspace = true }
sp-session = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-version = { workspace = true }
sp-io = { workspace = true }

# frame dependencies
frame-executive = { workspace = true }
frame-benchmarking = { workspace = true }
frame-benchmarking-pallet-pov = { workspace = true }
frame-support = { workspace = true, features = ["tuples-96"] }
frame-system = { workspace = true }
frame-system-benchmarking = { workspace = true, optional = true }
frame-election-provider-support = { workspace = true }
frame-system-rpc-runtime-api = { workspace = true }
frame-try-runtime = { workspace = true, optional = true }
pallet-alliance = { workspace = true }
pallet-assets = { workspace = true }
pallet-authority-discovery = { workspace = true }
pallet-authorship = { workspace = true }
pallet-babe = { workspace = true }
pallet-bags-list = { workspace = true }
pallet-balances = { workspace = true }
pallet-bounties = { workspace = true }
pallet-child-bounties = { workspace = true }
pallet-collective = { workspace = true }
pallet-contracts = { workspace = true }
pallet-contracts-primitives = { workspace = true }
pallet-conviction-voting = { workspace = true }
pallet-core-fellowship = { workspace = true }
pallet-democracy = { workspace = true }
pallet-election-provider-multi-phase = { workspace = true }
pallet-election-provider-support-benchmarking = { workspace = true, optional = true }
pallet-elections-phragmen = { workspace = true }
pallet-fast-unstake = { workspace = true }
pallet-grandpa = { workspace = true }
pallet-im-online = { workspace = true }
pallet-indices = { workspace = true }
pallet-identity = { workspace = true }
pallet-membership = { workspace = true }
pallet-mmr = { workspace = true }
pallet-multisig = { workspace = true }
pallet-nomination-pools = { workspace = true }
pallet-nomination-pools-benchmarking = { workspace = true, optional = true }
pallet-nomination-pools-runtime-api = { workspace = true }
pallet-offences = { workspace = true }
pallet-offences-benchmarking = { workspace = true, optional = true }
pallet-preimage = { workspace = true }
pallet-proxy = { workspace = true }
pallet-insecure-randomness-collective-flip = { workspace = true }
pallet-ranked-collective = { workspace = true }
pallet-recovery = { workspace = true }
pallet-referenda = { workspace = true }
pallet-remark = { workspace = true }
pallet-root-testing = { workspace = true }
pallet-session = { workspace = true, features = ["historical"] }
pallet-session-benchmarking = { workspace = true, optional = true }
pallet-staking = { workspace = true }
pallet-staking-reward-curve = { workspace = true }
pallet-staking-runtime-api = { workspace = true }
pallet-state-trie-migration = { workspace = true }
pallet-scheduler = { workspace = true }
pallet-sudo = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-treasury = { workspace = true }
pallet-utility = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
pallet-transaction-storage = { workspace = true }
pallet-vesting = { workspace = true }
pallet-esg = { workspace = true }

# Frontier
fp-account = { workspace = true, features = ["serde"] }
fp-evm = { workspace = true, features = ["serde"] }
fp-rpc = { workspace = true }
fp-self-contained = { workspace = true, features = ["serde"] }

# Frontier FRAME
pallet-base-fee = { workspace = true }
pallet-dynamic-fee = { workspace = true }
pallet-ethereum = { workspace = true }
pallet-evm = { workspace = true }
pallet-evm-chain-id = { workspace = true }
pallet-evm-precompile-modexp = { workspace = true }
pallet-evm-precompile-sha3fips = { workspace = true }
pallet-evm-precompile-simple = { workspace = true }
pallet-hotfix-sufficients = { workspace = true }

[build-dependencies]
substrate-wasm-builder = { workspace = true, optional = true }

[features]
default = ["std"]
with-tracing = ["frame-executive/with-tracing"]
std = [
	"pallet-offences-benchmarking?/std",
	"pallet-election-provider-support-benchmarking?/std",
	"frame-system-benchmarking?/std",
	"frame-election-provider-support/std",
	"sp-authority-discovery/std",
	"pallet-assets/std",
	"pallet-authority-discovery/std",
	"pallet-authorship/std",
	"sp-consensus-babe/std",
	"sp-consensus-grandpa/std",
	"pallet-babe/std",
	"pallet-bags-list/std",
	"pallet-balances/std",
	"pallet-bounties/std",
	"sp-block-builder/std",
	"codec/std",
	"scale-info/std",
	"pallet-collective/std",
	"pallet-contracts/std",
	"pallet-contracts-primitives/std",
	"pallet-conviction-voting/std",
	"pallet-core-fellowship/std",
	"pallet-democracy/std",
	"pallet-elections-phragmen/std",
	"pallet-fast-unstake/std",
	"frame-executive/std",
	"pallet-grandpa/std",
	"pallet-im-online/std",
	"pallet-indices/std",
	"sp-inherents/std",
	"pallet-membership/std",
	"pallet-mmr/std",
	"pallet-multisig/std",
	"pallet-nomination-pools/std",
	"pallet-nomination-pools-runtime-api/std",
	"pallet-nomination-pools-benchmarking?/std",
	"pallet-identity/std",
	"pallet-scheduler/std",
	"node-primitives/std",
	"sp-offchain/std",
	"pallet-offences/std",
	"pallet-preimage/std",
	"pallet-proxy/std",
	"sp-core/std",
	"pallet-insecure-randomness-collective-flip/std",
	"sp-std/std",
	"pallet-session/std",
	"pallet-session-benchmarking?/std",
	"sp-api/std",
	"sp-runtime/std",
	"sp-staking/std",
	"pallet-staking/std",
	"pallet-staking-runtime-api/std",
	"pallet-state-trie-migration/std",
	"sp-session/std",
	"pallet-sudo/std",
	"frame-support/std",
	"frame-benchmarking/std",
	"frame-benchmarking-pallet-pov/std",
	"frame-system-rpc-runtime-api/std",
	"frame-system/std",
	"pallet-election-provider-multi-phase/std",
	"pallet-timestamp/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-transaction-payment/std",
	"pallet-transaction-storage/std",
	"pallet-treasury/std",
	"sp-transaction-pool/std",
	"pallet-utility/std",
	"sp-version/std",
	"pallet-ranked-collective/std",
	"pallet-referenda/std",
	"pallet-remark/std",
	"pallet-root-testing/std",
	"pallet-recovery/std",
	"pallet-vesting/std",
	"log/std",
	"frame-try-runtime?/std",
	"sp-io/std",
	"pallet-child-bounties/std",
	"pallet-alliance/std",
	"substrate-wasm-builder",
	"pallet-esg/std",
	#frontier
	'fp-rpc/std',
	'fp-evm/std',
	'fp-account/std',
	'fp-self-contained/std',
	'pallet-base-fee/std',
	'pallet-dynamic-fee/std',
	'pallet-ethereum/std',
	'pallet-evm/std',
	'pallet-evm-precompile-simple/std',
	'pallet-evm-precompile-sha3fips/std',
	"pallet-evm-precompile-simple/std",
	"firechain-runtime-core-primitives/std",
]
runtime-benchmarks = [
	"frame-benchmarking/runtime-benchmarks",
	"frame-benchmarking-pallet-pov/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"pallet-alliance/runtime-benchmarks",
	"pallet-assets/runtime-benchmarks",
	"pallet-babe/runtime-benchmarks",
	"pallet-bags-list/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-bounties/runtime-benchmarks",
	"pallet-child-bounties/runtime-benchmarks",
	"pallet-collective/runtime-benchmarks",
	"pallet-contracts/runtime-benchmarks",
	"pallet-conviction-voting/runtime-benchmarks",
	"pallet-core-fellowship/runtime-benchmarks",
	"pallet-democracy/runtime-benchmarks",
	"pallet-election-provider-multi-phase/runtime-benchmarks",
	"pallet-election-provider-support-benchmarking/runtime-benchmarks",
	"pallet-elections-phragmen/runtime-benchmarks",
	"pallet-fast-unstake/runtime-benchmarks",
	"pallet-grandpa/runtime-benchmarks",
	"pallet-identity/runtime-benchmarks",
	"pallet-im-online/runtime-benchmarks",
	"pallet-indices/runtime-benchmarks",
	"pallet-membership/runtime-benchmarks",
	"pallet-mmr/runtime-benchmarks",
	"pallet-multisig/runtime-benchmarks",
	"pallet-nomination-pools-benchmarking/runtime-benchmarks",
	"pallet-offences-benchmarking/runtime-benchmarks",
	"pallet-preimage/runtime-benchmarks",
	"pallet-proxy/runtime-benchmarks",
	"pallet-scheduler/runtime-benchmarks",
	"pallet-ranked-collective/runtime-benchmarks",
	"pallet-referenda/runtime-benchmarks",
	"pallet-recovery/runtime-benchmarks",
	"pallet-remark/runtime-benchmarks",
	"pallet-session-benchmarking/runtime-benchmarks",
	"pallet-staking/runtime-benchmarks",
	"pallet-state-trie-migration/runtime-benchmarks",
	"pallet-sudo/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"pallet-transaction-storage/runtime-benchmarks",
	"pallet-treasury/runtime-benchmarks",
	"pallet-utility/runtime-benchmarks",
	"pallet-vesting/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
	"pallet-esg/runtime-benchmarks",
	"pallet-ethereum/runtime-benchmarks",
]
try-runtime = [
	"frame-try-runtime/try-runtime",
	"frame-benchmarking-pallet-pov/try-runtime",
	"frame-executive/try-runtime",
	"frame-system/try-runtime",
	"frame-support/try-runtime",
	"pallet-alliance/try-runtime",
	"pallet-assets/try-runtime",
	"pallet-authority-discovery/try-runtime",
	"pallet-authorship/try-runtime",
	"pallet-babe/try-runtime",
	"pallet-bags-list/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-bounties/try-runtime",
	"pallet-child-bounties/try-runtime",
	"pallet-collective/try-runtime",
	"pallet-contracts/try-runtime",
	"pallet-conviction-voting/try-runtime",
	"pallet-core-fellowship/try-runtime",
	"pallet-democracy/try-runtime",
	"pallet-election-provider-multi-phase/try-runtime",
	"pallet-elections-phragmen/try-runtime",
	"pallet-fast-unstake/try-runtime",
	"pallet-grandpa/try-runtime",
	"pallet-im-online/try-runtime",
	"pallet-indices/try-runtime",
	"pallet-identity/try-runtime",
	"pallet-membership/try-runtime",
	"pallet-mmr/try-runtime",
	"pallet-multisig/try-runtime",
	"pallet-nomination-pools/try-runtime",
	"pallet-offences/try-runtime",
	"pallet-preimage/try-runtime",
	"pallet-proxy/try-runtime",
	"pallet-insecure-randomness-collective-flip/try-runtime",
	"pallet-ranked-collective/try-runtime",
	"pallet-recovery/try-runtime",
	"pallet-referenda/try-runtime",
	"pallet-remark/try-runtime",
	"pallet-root-testing/try-runtime",
	"pallet-session/try-runtime",
	"pallet-staking/try-runtime",
	"pallet-state-trie-migration/try-runtime",
	"pallet-scheduler/try-runtime",
	"pallet-sudo/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-treasury/try-runtime",
	"pallet-utility/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"pallet-transaction-storage/try-runtime",
	"pallet-vesting/try-runtime",
	"pallet-esg/try-runtime",
	"fp-self-contained/try-runtime",
	"sp-runtime/try-runtime",
	"pallet-ethereum/try-runtime",
	"pallet-evm/try-runtime",
	"pallet-base-fee/try-runtime",
	"pallet-dynamic-fee/try-runtime",
]
